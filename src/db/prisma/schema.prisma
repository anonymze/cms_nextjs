generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../__db__/sqlite.db"
}

model Article {
    id        Int            @id @default(autoincrement())
    uuid      String         @unique @default(uuid())
    i18n_id   Int?           @map("i18n") @ignore
    i18n      Article_I18n[]
    createdAt DateTime       @default(now())

    @@index(fields: [uuid])
}
model Article_I18n {
    id          Int     @id @default(autoincrement())
    article_id  Int     @map("article")
    article     Article @relation(fields: [article_id], references: [id], onDelete: Cascade)
    lang        String
    title       String
    content     String
    description String?
    conclusion  String?

    @@index(fields: [lang])
}
model Media {
    id        Int     @id @default(autoincrement())
    uuid      String  @unique @default(uuid())
    filepath_public  String
    filetype  String

    @@index(fields: [uuid])
}model Page {
    id        Int         @id @default(autoincrement())
    uuid      String      @unique @default(uuid())
    i18n_id   Int?        @map("i18n") @ignore
    i18n      Page_I18n[] @relation()
    createdAt DateTime    @default(now())

    @@index(fields: [uuid])
}
model Page_I18n {
    id          Int     @id @default(autoincrement())
    page_id     Int     @map("page")
    page        Page    @relation(fields: [page_id], references: [id], onDelete: Cascade)
    lang        String
    title       String
    description String
    subtitle    String?

    @@index(fields: [lang])
}
model User {
    id        Int      @id @default(autoincrement())
    uuid      String   @unique @default(uuid())
    isActive  Boolean  @default(false)
    name      String?
    email     String   @unique
    role      String   @default("USER")
    createdAt DateTime @default(now())

    @@index(fields: [email])
}
